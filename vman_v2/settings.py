"""
Django settings for vman_v2 project.

Generated by 'django-admin startproject' using Django 4.0.5.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""

from decouple import config
from pathlib import Path
from datetime import datetime

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config('DEBUG', default=False, cast=bool)

# if not DEBUG:
#     ALLOWED_HOSTS = ['www.vman.aaph.or.tz', 'vman.aaph.or.tz']
#     SECURE_SSL_REDIRECT=True
#     SECURE_PROXY_SSL_HEADER=('HTTP_X_FORWARDED_PROTO', 'https')
#     SESSION_COOKIE_SECURE=True
#     SESSION_EXPIRE_AT_BROWSER_CLOSE=True
# else:
#     ALLOWED_HOSTS = ["*"]

ALLOWED_HOSTS = ["*"]

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    ## installed app
    'django.contrib.humanize',
    'phonenumber_field',
    'authentication',
    'dashboard',
    'crispy_forms',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'vman_v2.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR, 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django_settings_export.settings_export',
                # 'dashboard.context_processors.get_user_authorization',
            ],
        },
    },
]

WSGI_APPLICATION = 'vman_v2.wsgi.application'

CRISPY_TEMPLATE_PACK = 'bootstrap4'

myDate = datetime.now()
PROJECT_TITLE = config('PROJECT_TITLE')
ADMIN_LEVEL1 = config('ADMIN_LEVEL1')
ADMIN_LEVEL2 = config('ADMIN_LEVEL2')
ADMIN_LEVEL3 = config('ADMIN_LEVEL3')

CURRENT_YEAR = myDate
SETTINGS_EXPORT = [
    'PROJECT_TITLE',
    'CURRENT_YEAR',
    'ADMIN_LEVEL1',
    'ADMIN_LEVEL2',
    'ADMIN_LEVEL3',
]

ADMIN_LEVEL1_COL = config('ADMIN_LEVEL1_COL')
ADMIN_LEVEL2_COL = config('ADMIN_LEVEL2_COL')
ADMIN_LEVEL3_COL = config('ADMIN_LEVEL3_COL')




# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases
#
# DATABASES = {
#     'default': {},
#     'user_db': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     },
#     'csrv_db': {
#         'ENGINE': 'django.db.backends.postgresql',
#         'NAME': config('DB_NAME'),
#         'USER': config('DB_USER'),
#         'PASSWORD': config('DB_PASSWORD'),
#         'HOST':config('DB_HOST') ,
#         'PORT': config('DB_PORT', cast=int),
#     },
#
# }

# ************** Use two databases for django connection *********************

# DATABASES = {
#     'default': {
#             'ENGINE': 'django.db.backends.sqlite3',
#             'NAME': BASE_DIR / 'db.sqlite3',
#         },
#     'crvs_database': {
#         'ENGINE': 'django.db.backends.postgresql',
#         'NAME': config('DB_NAME'),
#         'USER': config('DB_USER'),
#         'PASSWORD': config('DB_PASSWORD'),
#         'HOST':config('DB_HOST') ,
#         'PORT': config('DB_PORT', cast=int),
#     }
# }

# DEFAULT_DB_ALIAS = 'crvs_database'
######## CRVS
DATABASES = {
   'default': {
       'ENGINE': 'django.db.backends.postgresql',
       'NAME': config('DB_NAME'),
       'USER': config('DB_USER'),
       'PASSWORD': config('DB_PASSWORD'),
       'HOST':config('DB_HOST') ,
       'PORT': config('DB_PORT', cast=int),
   }
}

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql_psycopg2',
#         'NAME': config('DB_NAME'),
#         'USER': config('DB_USER'),
#         'PASSWORD': config('DB_PASSWORD'),
#         'HOST':config('DB_HOST') ,
#         'PORT': config('DB_PORT', cast=int),
#     }
# }

#
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql_psycopg2',
#         'NAME': '',
#         'USER': '',
#         'PASSWORD': '',
#         'HOST': '127.0.0.1',
#         'PORT': '',
#     }
# }

# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = 'static/'
MEDIA_URL = '/media/'

# if not DEBUG:
#     #static and media directory when in production
#     STATICFILES_DIRS = [BASE_DIR, "static"]
#     STATIC_ROOT = ''
#     MEDIA_ROOT = ''

# else:
#     #static and media when in local(developemnt)
#     STATIC_URL = 'static/'
#     STATICFILES_DIRS = [BASE_DIR, "static"]
#     MEDIA_URL = '/media/'
#     MEDIA_ROOT = [BASE_DIR, 'media']
#     # MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

#static and media when in local(developemnt)
#STATIC_URL = 'static/'
STATICFILES_DIRS = [BASE_DIR, "static"]
#MEDIA_URL = '/media/'
MEDIA_ROOT = [BASE_DIR, 'media']
# MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

LOGIN_URL = 'authentication:loginPage'
LOGOUT_REDIRECT_URL = 'authentication:loginPage'
LOGIN_REDIRECT_URL = 'dashboard:dashboardPage'


# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


EMAIL_BACKEND = config('EMAIL_BACKEND')
EMAIL_HOST = config('EMAIL_HOST')
EMAIL_USE_TLS = config('EMAIL_USE_TLS', cast=bool)
EMAIL_PORT = config('EMAIL_PORT', cast=int)
EMAIL_HOST_USER = config('EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD = config('EMAIL_HOST_PASSWORD')
